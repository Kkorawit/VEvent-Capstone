type Query {
    allEvents: [Event]
    findAllRegisEventsByUEmail(uEmail: ID): [User_Event]
    findAllEventCreatedByUEmail(uEmail: ID): [Event]
    findUserByEmail(uEmail:ID): User
    findAllParticipantsByEventId(eid:ID): [User_Event]
    findEventDetailsByUserEventId(id:ID): User_Event
    findEventDetailsByEventId(id:ID): Event
    findEventByCategory(category:String): [Event]
}

union EventList = Event | User_Event

type User_Event {
    user_event_id: ID!
    user: User
    event: Event
    status:String
    doneTimes:Int
}

type User {
    userEmail: ID!
    role: String
    displayName: String
    profileImg: String
}

type Event {
    id: ID!
    title: String
    description: String
    amountReceived: String
    category: String
    subCategory: String
    startDate: String
    endDate: String
    registerStartDate: String
    registerEndDate: String
    validationType: String
    validationRules: Float
    posterImg: String
    createBy: String
    createDate: String
    updateBy: String
    updateDate: String
    locationName: String
    locationLatitude: Float
    locationLongitude: Float
    validate_times: Int
    eventStatus: String
}